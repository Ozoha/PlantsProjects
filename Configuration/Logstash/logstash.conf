input {
     file {
       type => "sample"
       path => "/usr/share/logstash/data/meta_data.csv"
       start_position => "beginning"
       sincedb_path => "/dev/null"
     }
     file {
       type => "taxonomy"
       path => "/usr/share/logstash/data/taxonomy_levels_sample_28.csv"
       start_position => "beginning"
       sincedb_path => "/dev/null"
     }
     file {
       type => "taxonomy"
       path => "/usr/share/logstash/data/taxonomy_levels_sample_50.csv"
       start_position => "beginning"
       sincedb_path => "/dev/null"
     }
#      elasticsearch {
#         hosts => ["http://elasticsearch:9200"]
#         user => "elastic"
#         password => "7ihOiTOFI+iASzF2zEbJ"
#         query => '{ "query": { "match": { "statuscode": 200 } }, "sort": [ "_doc" ] }'
#      }
}

filter {


      fingerprint {
        method => "MURMUR3"
        target => "[@metadata][fingerprint]"
        concatenate_sources => true
    }

    if [type] == "sample" {
     csv {
       separator => ","
       skip_header => true
       autodetect_column_names => true
       }

     date {
        match => ["date", "dd/MM/yy HH:mm"]
        target => "date"
        }

     mutate { convert => {"lat" => "float"} }
     mutate { convert => {"lon" => "float"} }
     mutate { rename => {"lat" => "[geoip][location][lat]"} }
     mutate { rename => {"lon" => "[geoip][location][lon]"} }
    }
    else if [type] == "taxonomy" {

        csv {
           separator => ","
           skip_header => true
           autodetect_column_names => true
        }
        if [message] =~ /domain,/ {
            drop {}
        }
        mutate { convert => {"L" => "float"} }
        mutate { convert => {"R" => "float"} }
        mutate { convert => {"S" => "float"} }
    }
  }
output {
      stdout { codec => dots }
      elasticsearch {
       hosts => ["http://elasticsearch:9200"]
       user => "elastic"
       password => "7ihOiTOFI+iASzF2zEbJ"
       index => "logstash-%{type}"
       ilm_enabled => false
       document_id => "%{[@metadata][fingerprint]}"
       }

}